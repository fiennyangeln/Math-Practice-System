# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-01-15 16:02
from __future__ import unicode_literals

import ckeditor.fields
import ckeditor_uploader.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerAskedQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnswerPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_name', models.CharField(choices=[('1', 'a'), ('2', 'b'), ('3', 'c'), ('4', 'd')], max_length=1)),
                ('part_content', ckeditor.fields.RichTextField()),
                ('part_respone_type', models.CharField(choices=[('Numerical', 'Numerical'), ('Sketch', 'Sketch'), ('Expression', 'Expression'), ('Text', 'Text'), ('Prove', 'Prove')], default='4', max_length=10)),
                ('subpart_name_1', models.CharField(blank=True, max_length=10, null=True)),
                ('subpart_content_1', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('respone_type_1', models.CharField(blank=True, choices=[('Numerical', 'Numerical'), ('Sketch', 'Sketch'), ('Expression', 'Expression'), ('Text', 'Text'), ('Prove', 'Prove')], default='4', max_length=10, null=True)),
                ('subpart_name_2', models.CharField(blank=True, max_length=10, null=True)),
                ('subpart_content_2', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('respone_type_2', models.CharField(blank=True, choices=[('Numerical', 'Numerical'), ('Sketch', 'Sketch'), ('Expression', 'Expression'), ('Text', 'Text'), ('Prove', 'Prove')], default='4', max_length=10, null=True)),
                ('subpart_name_3', models.CharField(blank=True, max_length=10, null=True)),
                ('subpart_content_3', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('respone_type_3', models.CharField(blank=True, choices=[('Numerical', 'Numerical'), ('Sketch', 'Sketch'), ('Expression', 'Expression'), ('Text', 'Text'), ('Prove', 'Prove')], default='4', max_length=10, null=True)),
                ('subpart_name_4', models.CharField(blank=True, max_length=10, null=True)),
                ('subpart_content_4', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('respone_type_4', models.CharField(blank=True, choices=[('Numerical', 'Numerical'), ('Sketch', 'Sketch'), ('Expression', 'Expression'), ('Text', 'Text'), ('Prove', 'Prove')], default='4', max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnswerQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AskedQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=200)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(default='')),
                ('number_views', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('order', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='EducationLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Formula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200)),
                ('content', models.TextField()),
                ('status', models.BooleanField(default=False)),
                ('inorder_term', models.TextField(blank=True, max_length=1024, null=True)),
                ('sorted_term', models.TextField(blank=True, max_length=1024, null=True)),
                ('structure_term', models.TextField(blank=True, max_length=1024, null=True)),
                ('constant_term', models.TextField(blank=True, max_length=1024, null=True)),
                ('variable_term', models.TextField(blank=True, max_length=1024, null=True)),
                ('is_used', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='FormulaIndex',
            fields=[
                ('indexkey', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('df', models.PositiveIntegerField(blank=True, default=1, verbose_name='frequency')),
                ('formulas', models.ManyToManyField(to='webmodels.Formula')),
            ],
        ),
        migrations.CreateModel(
            name='KeyPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.Concept')),
            ],
        ),
        migrations.CreateModel(
            name='MathPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_views', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MathPaperQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('math_paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.MathPaper')),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(default='Singapore', max_length=100)),
                ('title', models.CharField(default='', max_length=500)),
                ('year', models.IntegerField(default=2000)),
                ('paper_number', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('education_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.EducationLevel')),
            ],
        ),
        migrations.CreateModel(
            name='PaperFormat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_type', models.CharField(choices=[('1', 'Mid Year'), ('2', 'End of Year'), ('3', 'Topical')], default='Sec1', max_length=50)),
                ('paper_level', models.CharField(choices=[('Sec1', 'Secondary 1'), ('Sec2', 'Secondary 2'), ('Sec3', 'Secondary 3'), ('Sec4', 'Secondary 4'), ('JC1', 'JC1'), ('JC2', 'JC2'), ('Uni1', 'Uni1'), ('Uni2', 'Uni2')], default='Sec1', max_length=50)),
                ('paper_number', models.CharField(choices=[('1', 'Paper 1'), ('2', 'Paper 2')], default='Sec1', max_length=50)),
                ('number_of_questions', models.IntegerField(default=0)),
                ('total_marks', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaperFormatQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paper_format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.PaperFormat')),
            ],
        ),
        migrations.CreateModel(
            name='PaperTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('total_completion_time', models.IntegerField(default=60)),
                ('difficulty_degree', models.CharField(choices=[('1', 'Very Easy'), ('2', 'Easy'), ('3', 'Average'), ('4', 'Difficult'), ('5', 'Very Difficult')], default='3', max_length=1)),
                ('average_difficulty_degree', models.FloatField(default=1.0)),
                ('number_of_questions', models.IntegerField(default=5)),
                ('marks', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PracticeSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_marks', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paper_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.PaperTest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PracticeSubmissionDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', ckeditor.fields.RichTextField(default='')),
                ('answer_result', models.BooleanField(default=True)),
                ('part_name_a', ckeditor.fields.RichTextField(default='')),
                ('part_name_a_result', models.BooleanField(default=True)),
                ('subpart_name_a_1', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_a_1_result', models.BooleanField(default=True)),
                ('subpart_name_a_2', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_a_2_result', models.BooleanField(default=True)),
                ('subpart_name_a_3', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_a_3_result', models.BooleanField(default=True)),
                ('subpart_name_a_4', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_a_4_result', models.BooleanField(default=True)),
                ('part_name_b', ckeditor.fields.RichTextField(default='')),
                ('part_name_b_result', models.BooleanField(default=True)),
                ('subpart_name_b_1', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_b_1_result', models.BooleanField(default=True)),
                ('subpart_name_b_2', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_b_2_result', models.BooleanField(default=True)),
                ('subpart_name_b_3', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_b_3_result', models.BooleanField(default=True)),
                ('subpart_name_b_4', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_b_4_result', models.BooleanField(default=True)),
                ('part_name_c', ckeditor.fields.RichTextField(default='')),
                ('part_name_c_result', models.BooleanField(default=True)),
                ('subpart_name_c_1', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_c_1_result', models.BooleanField(default=True)),
                ('subpart_name_c_2', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_c_2_result', models.BooleanField(default=True)),
                ('subpart_name_c_3', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_c_3_result', models.BooleanField(default=True)),
                ('subpart_name_c_4', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_c_4_result', models.BooleanField(default=True)),
                ('part_name_d', ckeditor.fields.RichTextField(default='')),
                ('part_name_d_result', models.BooleanField(default=True)),
                ('subpart_name_d_1', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_d_1_result', models.BooleanField(default=True)),
                ('subpart_name_d_2', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_d_2_result', models.BooleanField(default=True)),
                ('subpart_name_d_3', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_d_3_result', models.BooleanField(default=True)),
                ('subpart_name_d_4', ckeditor.fields.RichTextField(default='')),
                ('subpart_name_d_4_result', models.BooleanField(default=True)),
                ('marks', models.IntegerField(default=0)),
                ('is_tried', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('practice_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.PracticeSubmission')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('1', 'Practice'), ('2', 'Quiz'), ('3', 'Exam'), ('4', 'Example'), ('5', 'Exercise')], default='EX', max_length=2)),
                ('used_for', models.CharField(choices=[('1', 'No'), ('2', 'Online'), ('3', 'Papers'), ('4', 'Both Online and Papers')], default='ON', max_length=2)),
                ('mark', models.IntegerField(default=0)),
                ('difficulty_level', models.CharField(choices=[('1', 'Very Easy'), ('2', 'Easy'), ('3', 'Average'), ('4', 'Difficult'), ('5', 'Very Difficult')], default='1', max_length=1)),
                ('float_difficulty_level', models.FloatField(default=0.5)),
                ('respone_type', models.CharField(choices=[('Numerical', 'Numerical'), ('Sketch', 'Sketch'), ('Expression', 'Expression'), ('Text', 'Text'), ('Prove', 'Prove')], default='4', max_length=10)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(default='')),
                ('solution', ckeditor_uploader.fields.RichTextUploadingField()),
                ('answer', ckeditor.fields.RichTextField(default='Test')),
                ('number_views', models.PositiveIntegerField(default=0)),
                ('checked', models.BooleanField(default=False)),
                ('is_correct', models.BooleanField(default=False)),
                ('avatar', models.ImageField(default='static/img/no_image.png', upload_to='uploads/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.Concept')),
                ('keypoint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webmodels.KeyPoint')),
                ('lastCheckedBy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('paper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webmodels.Paper')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=500)),
                ('description', models.TextField(max_length=1000)),
                ('total_completion_time', models.IntegerField(default=60)),
                ('total_marks', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('education_level', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='webmodels.EducationLevel')),
                ('questions', models.ManyToManyField(to='webmodels.Question')),
            ],
        ),
        migrations.CreateModel(
            name='QuizListQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.IntegerField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.Question')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.Quiz')),
            ],
        ),
        migrations.CreateModel(
            name='QuizSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_marks', models.IntegerField(default=0)),
                ('submitted_at', models.DateTimeField(default=datetime.datetime(2018, 1, 16, 0, 2, 42, 48551))),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.Quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuizSubmissionDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_result', models.BooleanField(default=False)),
                ('answer', ckeditor.fields.RichTextField(default='')),
                ('answer_result', models.BooleanField(default=True)),
                ('part_name_a', ckeditor.fields.RichTextField(default='')),
                ('part_name_a_result', models.BooleanField(default=True)),
                ('part_name_b', ckeditor.fields.RichTextField(default='')),
                ('part_name_b_result', models.BooleanField(default=True)),
                ('part_name_c', ckeditor.fields.RichTextField(default='')),
                ('part_name_c_result', models.BooleanField(default=True)),
                ('part_name_d', ckeditor.fields.RichTextField(default='')),
                ('part_name_d_result', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.Question')),
                ('quiz_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.QuizSubmission')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(default='')),
                ('new_description', ckeditor_uploader.fields.RichTextUploadingField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(max_length=1000)),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('education_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.EducationLevel')),
            ],
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_teacher', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='tags',
            field=models.ManyToManyField(to='webmodels.Tag'),
        ),
        migrations.AddField(
            model_name='practicesubmissiondetail',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.Question'),
        ),
        migrations.AddField(
            model_name='papertest',
            name='questions',
            field=models.ManyToManyField(to='webmodels.Question'),
        ),
        migrations.AddField(
            model_name='papertest',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='paperformat',
            unique_together=set([('paper_type', 'paper_level', 'paper_number')]),
        ),
        migrations.AddField(
            model_name='mathpaperquestion',
            name='paper_format_question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.PaperFormatQuestion'),
        ),
        migrations.AddField(
            model_name='mathpaperquestion',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.Question'),
        ),
        migrations.AddField(
            model_name='mathpaper',
            name='paper_format',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.PaperFormat'),
        ),
        migrations.AddField(
            model_name='mathpaper',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='formula',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.Question'),
        ),
        migrations.AddField(
            model_name='concept',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.Topic'),
        ),
        migrations.AddField(
            model_name='askedquestion',
            name='tags',
            field=models.ManyToManyField(to='webmodels.Tag'),
        ),
        migrations.AddField(
            model_name='askedquestion',
            name='topic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='webmodels.Topic'),
        ),
        migrations.AddField(
            model_name='askedquestion',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answerquestion',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.Question'),
        ),
        migrations.AddField(
            model_name='answerquestion',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answerpart',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.Question'),
        ),
        migrations.AddField(
            model_name='answeraskedquestion',
            name='asked_question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webmodels.AskedQuestion'),
        ),
        migrations.AddField(
            model_name='answeraskedquestion',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
